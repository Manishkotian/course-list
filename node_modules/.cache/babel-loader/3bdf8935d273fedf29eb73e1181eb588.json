{"ast":null,"code":"import _classCallCheck from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/kuliza-330/github/course-list/src/containers/App/index.js\";\nimport React, { Component } from 'react';\nimport SearchComponent from '../SearchComponent';\nimport { getProviderList, getUniversitiesList, getSubjectList, getSortedDateAndNumberArray, getFilterCourseList, getSortedList, getChildSubjectList } from '../../utils';\nimport { Badge, Button, Row } from 'react-bootstrap';\nimport CardComponent from '../../components/Card';\nimport NavBarComponent from '../../components/NavBar';\nimport Constants from '../../constants';\nimport { connect } from 'react-redux';\nimport { setApiData as _setApiData, setProviderListData as _setProviderListData, setUniversityListData as _setUniversityListData, setSubjectListData as _setSubjectListData, setChildSubjectListData as _setChildSubjectListData, setFilteredArray as _setFilteredArray, setTotalCourseFound as _setTotalCourseFound, setUserCourseFound as _setUserCourseFound } from '../../reducer/action';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      isLoading: true,\n      error: null\n    };\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearFilter = _this.clearFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeFilter = _this.onChangeFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var endPointApi = Constants.endPointApi;\n      this.getCourseList(endPointApi);\n    } //function to fetch endpoint api\n    //param: url\n    //return: json or error\n\n  }, {\n    key: \"getCourseList\",\n    value: function getCourseList(url) {\n      var _this2 = this;\n\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.getSelectOptions(data);\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    } //function to get provider, university, parent subject, child subject and sorted date json list\n    //param: api data\n    //retur: provider, university, parent subject, child subject and sorted date json list\n\n  }, {\n    key: \"getSelectOptions\",\n    value: function getSelectOptions(data) {\n      var providerList = getProviderList(data);\n      var universitiesList = getUniversitiesList(data);\n      var subjectList = getSubjectList(data);\n      var childSubjectList = getChildSubjectList(data);\n      var sortedDateArray = getSortedDateAndNumberArray(data);\n      this.props.setApiData(sortedDateArray);\n      this.props.setProviderListData(providerList);\n      this.props.setUniversityListData(universitiesList);\n      this.props.setSubjectListData(subjectList);\n      this.props.setChildSubjectListData(childSubjectList);\n      this.props.setFilteredArray(sortedDateArray);\n      this.props.setTotalCourseFound(sortedDateArray.length);\n      this.setState({\n        isLoading: false\n      });\n    } //function to get course list for selected option\n    //param: value selected by option, type is a form field selected\n    //return: new course list array\n\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(value, type) {\n      if (value) {\n        if (type === 3) {\n          var filteredArray = this.props.filteredArray;\n          var filteredCourseList = getFilterCourseList(filteredArray, value, type);\n          var childSubjectList = getChildSubjectList(filteredCourseList);\n          this.props.setFilteredArray(filteredCourseList);\n          this.props.setUserCourseFound(filteredCourseList.length);\n          this.props.setChildSubjectListData(childSubjectList);\n        } else {\n          var apiData = this.props.apiData;\n\n          var _filteredCourseList = getFilterCourseList(apiData, value, type);\n\n          var _childSubjectList = getChildSubjectList(_filteredCourseList);\n\n          this.props.setFilteredArray(_filteredCourseList);\n          this.props.setUserCourseFound(_filteredCourseList.length);\n          this.props.setChildSubjectListData(_childSubjectList);\n        }\n      }\n    } //function to clear filter\n    //return: api feteched arrray\n\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      var apiData = this.props.apiData;\n      var childSubjectList = getChildSubjectList(apiData);\n      this.props.setFilteredArray(apiData);\n      this.props.setUserCourseFound(0);\n      this.props.setChildSubjectListData(childSubjectList);\n    } //function to sort based on next session date and length\n    //param: type of sort selected\n    ///return: new filtered array of course list\n\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(type) {\n      var filteredArray = this.props.filteredArray;\n      var sortedCourseList = getSortedList(filteredArray, type);\n      console.log(type);\n      this.props.setFilteredArray(sortedCourseList);\n      this.props.setUserCourseFound(sortedCourseList.length);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var totalCoursesFound = Constants.totalCoursesFound,\n          courseFoundBasedOnUserSearch = Constants.courseFoundBasedOnUserSearch;\n      var _this$props = this.props,\n          providerList = _this$props.providerList,\n          universitiesList = _this$props.universitiesList,\n          subjectList = _this$props.subjectList,\n          childSubjectList = _this$props.childSubjectList,\n          filteredArray = _this$props.filteredArray,\n          totalCourseFound = _this$props.totalCourseFound,\n          userCoursesFound = _this$props.userCoursesFound;\n\n      if (this.state.isLoading) {\n        return React.createElement(\"div\", {\n          className: \"custom-loading-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Loading.....\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(NavBarComponent, {\n        color: \"dark\",\n        variant: \"dark\",\n        title: \"React Assignment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(SearchComponent, {\n        providerList: providerList,\n        universitiesList: universitiesList,\n        subjectList: subjectList,\n        childSubjectList: childSubjectList,\n        onChangeHandler: this.onChangeHandler,\n        clearFilter: this.clearFilter,\n        onChangeFilter: this.onChangeFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"m-3 ml-0 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"dark\",\n        className: \"mr-3 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, totalCoursesFound, \":\\xA0\", React.createElement(Badge, {\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, totalCourseFound)), React.createElement(Button, {\n        variant: \"dark\",\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, courseFoundBasedOnUserSearch, \":\\xA0\", React.createElement(Badge, {\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, userCoursesFound))), React.createElement(CardComponent, {\n        filteredArray: filteredArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    apiData: state.apiData,\n    providerList: state.providerList,\n    universitiesList: state.universitiesList,\n    subjectList: state.subjectList,\n    childSubjectList: state.childSubjectList,\n    filteredArray: state.filteredArray,\n    totalCourseFound: state.totalCourseFound,\n    userCoursesFound: state.userCoursesFound\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setApiData: function setApiData(data) {\n      dispatch(_setApiData(data));\n    },\n    setProviderListData: function setProviderListData(data) {\n      dispatch(_setProviderListData(data));\n    },\n    setUniversityListData: function setUniversityListData(data) {\n      dispatch(_setUniversityListData(data));\n    },\n    setSubjectListData: function setSubjectListData(data) {\n      dispatch(_setSubjectListData(data));\n    },\n    setChildSubjectListData: function setChildSubjectListData(data) {\n      dispatch(_setChildSubjectListData(data));\n    },\n    setFilteredArray: function setFilteredArray(data) {\n      dispatch(_setFilteredArray(data));\n    },\n    setTotalCourseFound: function setTotalCourseFound(data) {\n      dispatch(_setTotalCourseFound(data));\n    },\n    setUserCourseFound: function setUserCourseFound(data) {\n      dispatch(_setUserCourseFound(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/kuliza-330/github/course-list/src/containers/App/index.js"],"names":["React","Component","SearchComponent","getProviderList","getUniversitiesList","getSubjectList","getSortedDateAndNumberArray","getFilterCourseList","getSortedList","getChildSubjectList","Badge","Button","Row","CardComponent","NavBarComponent","Constants","connect","setApiData","setProviderListData","setUniversityListData","setSubjectListData","setChildSubjectListData","setFilteredArray","setTotalCourseFound","setUserCourseFound","App","props","state","isLoading","error","onChangeHandler","bind","clearFilter","onChangeFilter","endPointApi","getCourseList","url","fetch","then","response","json","data","getSelectOptions","catch","setState","providerList","universitiesList","subjectList","childSubjectList","sortedDateArray","length","value","type","filteredArray","filteredCourseList","apiData","sortedCourseList","console","log","totalCoursesFound","courseFoundBasedOnUserSearch","totalCourseFound","userCoursesFound","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SearchComponent from '../SearchComponent';\nimport {getProviderList,getUniversitiesList,getSubjectList, getSortedDateAndNumberArray, getFilterCourseList, getSortedList, getChildSubjectList} from '../../utils';\nimport {Badge, Button, Row} from 'react-bootstrap';\nimport CardComponent from '../../components/Card';\nimport NavBarComponent from '../../components/NavBar';\nimport Constants from '../../constants';\nimport { connect } from 'react-redux'\nimport {setApiData, setProviderListData, setUniversityListData, setSubjectListData, setChildSubjectListData, \n\tsetFilteredArray, setTotalCourseFound, setUserCourseFound} from '../../reducer/action';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n            error: null,\n\t\t};\n\t\tthis.onChangeHandler = this.onChangeHandler.bind(this);\n\t\tthis.clearFilter = this.clearFilter.bind(this);\n\t\tthis.onChangeFilter = this.onChangeFilter.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {endPointApi} = Constants;\n\t\tthis.getCourseList(endPointApi);\n\t}\n\n\t//function to fetch endpoint api\n\t//param: url\n\t//return: json or error\n\tgetCourseList(url) {\n\t\tfetch(url)\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t\tthis.getSelectOptions(data);\n\t\t})\n\t\t.catch(error => this.setState({ error, isLoading: false }));\n\t}\n\n\t//function to get provider, university, parent subject, child subject and sorted date json list\n\t//param: api data\n\t//retur: provider, university, parent subject, child subject and sorted date json list\n\tgetSelectOptions(data) {\n\t\tconst providerList = getProviderList(data);\n\t\tconst universitiesList = getUniversitiesList(data);\n\t\tconst subjectList = getSubjectList(data);\n\t\tconst childSubjectList = getChildSubjectList(data);\n\t\tconst sortedDateArray = getSortedDateAndNumberArray(data);\n\t\tthis.props.setApiData(sortedDateArray);\n\t\tthis.props.setProviderListData(providerList);\n\t\tthis.props.setUniversityListData(universitiesList);\n\t\tthis.props.setSubjectListData(subjectList);\n\t\tthis.props.setChildSubjectListData(childSubjectList);\n\t\tthis.props.setFilteredArray(sortedDateArray);\n\t\tthis.props.setTotalCourseFound(sortedDateArray.length);\n\t\tthis.setState({\n\t\t\tisLoading: false,\n\t\t});\n\t}\n\n\t//function to get course list for selected option\n\t//param: value selected by option, type is a form field selected\n\t//return: new course list array\n\tonChangeHandler(value,type) {\n\t\tif(value) {\n\t\t\tif(type === 3) {\n\t\t\t\tconst { filteredArray } =  this.props;\n\t\t\t\tconst filteredCourseList = getFilterCourseList(filteredArray,value,type);\n\t\t\t\tconst childSubjectList = getChildSubjectList(filteredCourseList);\n\t\t\t\tthis.props.setFilteredArray(filteredCourseList);\n\t\t\t\tthis.props.setUserCourseFound(filteredCourseList.length);\n\t\t\t\tthis.props.setChildSubjectListData(childSubjectList);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst { apiData } =  this.props;\n\t\t\t\tconst filteredCourseList = getFilterCourseList(apiData,value,type);\n\t\t\t\tconst childSubjectList = getChildSubjectList(filteredCourseList);\n\t\t\t\tthis.props.setFilteredArray(filteredCourseList);\n\t\t\t\tthis.props.setUserCourseFound(filteredCourseList.length);\n\t\t\t\tthis.props.setChildSubjectListData(childSubjectList);\n\t\t\t}\n\t\t}\t\t\n\t}\n\n\t//function to clear filter\n\t//return: api feteched arrray\n\tclearFilter() {\n\t\tconst {apiData} = this.props;\n\t\tconst childSubjectList = getChildSubjectList(apiData);\n\t\tthis.props.setFilteredArray(apiData);\n\t\tthis.props.setUserCourseFound(0);\n\t\tthis.props.setChildSubjectListData(childSubjectList);\n\t}\n\t//function to sort based on next session date and length\n\t//param: type of sort selected\n\t///return: new filtered array of course list\n\tonChangeFilter(type) {\n\t\tconst { filteredArray } =  this.props;\n\t\tconst sortedCourseList = getSortedList(filteredArray,type);\n\t\tconsole.log(type);\n\t\tthis.props.setFilteredArray(sortedCourseList);\n\t\tthis.props.setUserCourseFound(sortedCourseList.length);\n\t}\n\trender() {\n\t\tconst { totalCoursesFound, courseFoundBasedOnUserSearch } = Constants;\n\t\tconst {providerList, universitiesList, subjectList, childSubjectList, filteredArray, totalCourseFound, userCoursesFound} = this.props;\n\t\tif (this.state.isLoading) {\n\t\t\treturn (\n\t\t\t  <div className=\"custom-loading-text\">\n\t\t\t\tLoading.....\n\t\t\t  </div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"p-3\">\n\t\t\t\t<NavBarComponent color=\"dark\" variant=\"dark\" title=\"React Assignment\"/>\n\t\t\t\t<SearchComponent \n\t\t\t\t\tproviderList={providerList} \n\t\t\t\t\tuniversitiesList={universitiesList} \n\t\t\t\t\tsubjectList={subjectList} \n\t\t\t\t\tchildSubjectList = {childSubjectList}\n\t\t\t\t\tonChangeHandler= {this.onChangeHandler}\n\t\t\t\t\tclearFilter = {this.clearFilter}\n\t\t\t\t\tonChangeFilter = {this.onChangeFilter}\n\t\t\t\t/>\n\t\t\t\t<Row className=\"m-3 ml-0 \">\n\t\t\t   \t\t<Button variant=\"dark\"className=\"mr-3 mb-2\">\n\t\t\t\t\t\t{totalCoursesFound}:&nbsp;<Badge variant=\"light\">{totalCourseFound}</Badge>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"dark\" className=\"mb-2\">\n\t\t\t\t\t\t{courseFoundBasedOnUserSearch}:&nbsp;<Badge variant=\"light\">{userCoursesFound}</Badge>\n\t\t\t\t\t</Button>\n\t\t\t   </Row>\n\t\t\t\t<CardComponent filteredArray= {filteredArray}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\tapiData: state.apiData,\n\t\tproviderList: state.providerList,\n\t\tuniversitiesList: state.universitiesList,\n\t\tsubjectList: state.subjectList,\n\t\tchildSubjectList: state.childSubjectList,\n\t\tfilteredArray: state.filteredArray,\n\t\ttotalCourseFound: state.totalCourseFound,\n\t\tuserCoursesFound: state.userCoursesFound,\n\t}\n  }\n  \n  const mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetApiData: data => {\n\t\t\tdispatch(setApiData(data))\n\t\t},\n\t\tsetProviderListData: data => {\n\t\t\tdispatch(setProviderListData(data))\n\t\t},\n\t\tsetUniversityListData: data => {\n\t\t\tdispatch(setUniversityListData(data))\n\t\t},\n\t\tsetSubjectListData: data => {\n\t\t\tdispatch(setSubjectListData(data))\n\t\t},\n\t\tsetChildSubjectListData: data => {\n\t\t\tdispatch(setChildSubjectListData(data))\n\t\t},\n\t\tsetFilteredArray: data => {\n\t\t\tdispatch(setFilteredArray(data))\n\t\t},\n\t\tsetTotalCourseFound: data => {\n\t\t\tdispatch(setTotalCourseFound(data))\n\t\t},\n\t\tsetUserCourseFound: data => {\n\t\t\tdispatch(setUserCourseFound(data))\n\t\t}\n\t}\n  }\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}