{"ast":null,"code":"import _toConsumableArray from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n//function to get provider list\n//param api data\n//return provider list from api data\nexport var getProviderList = function getProviderList(apiData) {\n  var providerList = apiData.filter(function (data) {\n    if (!data.Provider) {\n      return false;\n    }\n\n    return true;\n  }).map(function (data) {\n    return data.Provider;\n  });\n\n  var distinctProviderList = _toConsumableArray(new Set(providerList));\n\n  return distinctProviderList;\n}; //function to get university list\n//param api data\n//return university list from api data\n\nexport var getUniversitiesList = function getUniversitiesList(apiData) {\n  var universitiesList = apiData.filter(function (data) {\n    if (!data.Universities.Institutions) {\n      return false;\n    }\n\n    return true;\n  }).map(function (data) {\n    return data.Universities.Institutions;\n  });\n\n  var distinctUniversitiesList = _toConsumableArray(new Set(universitiesList));\n\n  return distinctUniversitiesList;\n}; //function to get parent subject list\n//param api data\n//return parent subject list from api data\n\nexport var getSubjectList = function getSubjectList(apiData) {\n  var subjectList = apiData.filter(function (data) {\n    if (!data['Parent Subject']) {\n      return false;\n    }\n\n    return true;\n  }).map(function (data) {\n    return data['Parent Subject'];\n  });\n\n  var distinctsubjectList = _toConsumableArray(new Set(subjectList));\n\n  return distinctsubjectList;\n}; //function to get child subject list\n//param api data\n//return child subject list from api data\n\nexport var getChildSubjectList = function getChildSubjectList(apiData) {\n  var childSubjectList = apiData.filter(function (data) {\n    if (!data['Child Subject']) {\n      return false;\n    }\n\n    return true;\n  }).map(function (data) {\n    return data['Child Subject'];\n  });\n\n  var distinctChildSubjectList = _toConsumableArray(new Set(childSubjectList));\n\n  return distinctChildSubjectList;\n}; //function to get sorted date and length list in correct format\n//param api data\n//return sorted list  of date and lengthfrom api data\n\nexport var getSortedDateAndNumberArray = function getSortedDateAndNumberArray(apiData) {\n  var newArray = apiData.map(function (data) {\n    if (data['Next Session Date']) {\n      data['Next Session Date'] = data['Next Session Date'].replace(/th|st|nd|rd|,|''/g, \"\");\n    } else {\n      data['Next Session Date'] = 'N/A';\n    }\n\n    return data;\n  }).map(function (data) {\n    if (!data.Length) {\n      data.Length = 'N/A';\n    }\n\n    return data;\n  });\n  return newArray;\n}; //function to get filter array based on user selection of child subject\n//param api data, value selected, type of option selected\n//return filtered arary\n\nexport var getFilterCourseList = function getFilterCourseList(CourseListArray, value, type) {\n  var filterArray;\n\n  if (type === 0) {\n    filterArray = CourseListArray.filter(function (data) {\n      if (data.Provider === value) {\n        return data;\n      }\n\n      return false;\n    });\n  } else if (type === 1) {\n    filterArray = CourseListArray.filter(function (data) {\n      if (data.Universities.Institutions === value) {\n        return data;\n      }\n\n      return false;\n    });\n  } else if (type === 2) {\n    filterArray = CourseListArray.filter(function (data) {\n      if (data['Parent Subject'] === value) {\n        return data;\n      }\n\n      return false;\n    });\n  } else {\n    filterArray = CourseListArray.filter(function (data) {\n      if (data['Child Subject'] === value) {\n        return data;\n      }\n\n      return false;\n    });\n  }\n\n  return filterArray;\n}; //function to get filter next session or length based on user selection\n//param api data, type of option selected\n//return filtered arary\n\nexport var getSortedList = function getSortedList(courseListArray, type) {\n  var sortedArray;\n\n  if (type === 0) {\n    sortedArray = courseListArray.sort(function (a, b) {\n      if (Date.parse(b['Next Session Date'])) {\n        return new Date(a['Next Session Date']) - new Date(b['Next Session Date']);\n      }\n\n      return -1;\n    });\n  } else if (type === 1) {\n    sortedArray = courseListArray.sort(function (a, b) {\n      if (Date.parse(b['Next Session Date'])) {\n        return new Date(b['Next Session Date']) - new Date(a['Next Session Date']);\n      }\n\n      return -1;\n    });\n  } else if (type === 2) {\n    sortedArray = courseListArray.sort(function (a, b) {\n      if (!isNaN(b.Length)) {\n        return b.Length - a.Length;\n      }\n\n      return -1;\n    });\n  } else {\n    sortedArray = courseListArray.sort(function (a, b) {\n      if (!isNaN(b.Length)) {\n        return a.Length - b.Length;\n      }\n\n      return -1;\n    });\n  }\n\n  return sortedArray;\n};\nexport default {\n  getProviderList: getProviderList,\n  getUniversitiesList: getUniversitiesList,\n  getSubjectList: getSubjectList,\n  getChildSubjectList: getChildSubjectList,\n  getSortedDateAndNumberArray: getSortedDateAndNumberArray,\n  getFilterCourseList: getFilterCourseList,\n  getSortedList: getSortedList\n};","map":{"version":3,"sources":["/home/kuliza-330/github/course-list/src/utils/index.js"],"names":["getProviderList","apiData","providerList","filter","data","Provider","map","distinctProviderList","Set","getUniversitiesList","universitiesList","Universities","Institutions","distinctUniversitiesList","getSubjectList","subjectList","distinctsubjectList","getChildSubjectList","childSubjectList","distinctChildSubjectList","getSortedDateAndNumberArray","newArray","replace","Length","getFilterCourseList","CourseListArray","value","type","filterArray","getSortedList","courseListArray","sortedArray","sort","a","b","Date","parse","isNaN"],"mappings":"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","sourcesContent":["//function to get provider list\n//param api data\n//return provider list from api data\nexport const getProviderList = (apiData) => {\n    const providerList =  apiData.filter( function(data) { \n        if(!data.Provider) {\n            return false;\n        }\n        return true;\n    }).map(function(data) {return data.Provider});\n    const distinctProviderList = [...new Set(providerList)];\n    return distinctProviderList;\n}\n//function to get university list\n//param api data\n//return university list from api data\nexport const getUniversitiesList = (apiData) => {\n    const universitiesList =  apiData.filter(function(data){\n        if(!data.Universities.Institutions) {\n            return false;\n        }\n        return true;\n    }).map(function (data) { return data.Universities.Institutions});\n    const distinctUniversitiesList = [...new Set(universitiesList)];\n    return distinctUniversitiesList;\n}\n//function to get parent subject list\n//param api data\n//return parent subject list from api data\nexport const getSubjectList = (apiData) => {\n    const subjectList =  apiData.filter(function(data) { \n        if(!data['Parent Subject']) {\n            return false;\n        }\n        return true;\n    }).map(function(data) { return data['Parent Subject']});\n    const distinctsubjectList = [...new Set(subjectList)];\n    return distinctsubjectList;\n}\n//function to get child subject list\n//param api data\n//return child subject list from api data\nexport const getChildSubjectList = (apiData) => {\n    const childSubjectList =  apiData.filter(function(data) { \n        if(!data['Child Subject']) {\n            return false;\n        }\n        return true;\n    }).map(function(data) { return data['Child Subject']});\n    const distinctChildSubjectList = [...new Set(childSubjectList)];\n    return distinctChildSubjectList;\n}\n//function to get sorted date and length list in correct format\n//param api data\n//return sorted list  of date and lengthfrom api data\nexport const getSortedDateAndNumberArray = (apiData) => {\n    const newArray = apiData.map((data)=> {\n        if( data['Next Session Date']) {\n            data['Next Session Date'] = data['Next Session Date'].replace(/th|st|nd|rd|,|''/g,\"\");\n        }\n        else {\n            data['Next Session Date'] = 'N/A';\n        }        \n        return data;\n    }).map((data) => {\n        if(!data.Length) {\n            data.Length = 'N/A'\n        }       \n        return data;\n    });\n    return newArray;\n}\n//function to get filter array based on user selection of child subject\n//param api data, value selected, type of option selected\n//return filtered arary\nexport const getFilterCourseList = (CourseListArray, value,type) => {\n    let filterArray\n    if(type === 0) {\n        filterArray = CourseListArray.filter(function(data) {\n            if(data.Provider === value) {\n                return data;\n            }\n            return false;\n        });\n        \n    }\n    else if(type === 1) {\n        filterArray = CourseListArray.filter(function(data) {\n            if(data.Universities.Institutions === value) {\n                return data;\n            }\n            return false;\n        });\n        \n    }\n    else if(type === 2) {\n        filterArray = CourseListArray.filter(function(data) {\n            if(data['Parent Subject'] === value) {\n                return data;\n            }\n            return false;\n        });\n    }\n    else {\n        filterArray = CourseListArray.filter(function(data) {\n            if(data['Child Subject'] === value) {\n                return data;\n            }\n            return false;\n        });\n    }\n    return filterArray;\n}\n//function to get filter next session or length based on user selection\n//param api data, type of option selected\n//return filtered arary\nexport const getSortedList = (courseListArray,type) => {\n    let sortedArray;\n    if(type === 0) {\n        sortedArray = courseListArray.sort(function(a,b) {\n            if(Date.parse(b['Next Session Date'])) {\n                return new Date(a['Next Session Date']) - new Date(b['Next Session Date']);\n            }\n            return -1;            \n        });\n    }\n    else if(type === 1) {\n        sortedArray = courseListArray.sort(function(a,b) {\n            if(Date.parse(b['Next Session Date'])) {\n                return new Date(b['Next Session Date']) - new Date(a['Next Session Date']);\n            }\n            return -1;            \n        });\n    }\n    else if(type === 2) {\n        sortedArray = courseListArray.sort(function(a,b) {\n            if(!isNaN(b.Length)){\n                return b.Length - a.Length;   \n            }\n            return -1; \n        });\n    }\n    else {\n        sortedArray = courseListArray.sort(function(a,b) {\n            if(!isNaN(b.Length)){\n                return a.Length - b.Length;    \n            }\n            return -1;  \n        }); \n    }\n    return sortedArray;\n}\n\nexport default {getProviderList,getUniversitiesList,getSubjectList, getChildSubjectList, getSortedDateAndNumberArray, getFilterCourseList, getSortedList};\n"]},"metadata":{},"sourceType":"module"}