{"ast":null,"code":"import _classCallCheck from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/kuliza-330/github/course-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/kuliza-330/github/course-list/src/containers/App/index.js\";\nimport React, { Component } from 'react';\nimport SearchComponent from '../SearchComponent';\nimport { getProviderList, getUniversitiesList, getSubjectList, getSortedDateAndNumberArray, getFilterCourseList, getSortedList, getChildSubjectList } from '../../utils';\nimport { Badge, Button, Row } from 'react-bootstrap';\nimport CardComponent from '../../components/Card';\nimport NavBarComponent from '../../components/NavBar';\nimport Constants from '../../constants';\nimport { connect } from 'react-redux';\nimport { setApiData as _setApiData } from '../../reducer/action';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      apiData: [],\n      providerList: [],\n      universitiesList: [],\n      subjectList: [],\n      childSubjectList: [],\n      isLoading: true,\n      error: null,\n      filteredArray: [],\n      totalCourseFound: 0,\n      userCoursesFound: 0\n    };\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearFilter = _this.clearFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeFilter = _this.onChangeFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var endPointApi = Constants.endPointApi;\n      this.getCourseList(endPointApi);\n    } //function to fetch endpoint api\n    //param: url\n    //return: json or error\n\n  }, {\n    key: \"getCourseList\",\n    value: function getCourseList(url) {\n      var _this2 = this;\n\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.getSelectOptions(data);\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    } //function to get provider, university, parent subject, child subject and sorted date json list\n    //param: api data\n    //retur: provider, university, parent subject, child subject and sorted date json list\n\n  }, {\n    key: \"getSelectOptions\",\n    value: function getSelectOptions(data) {\n      var providerList = getProviderList(data);\n      var universitiesList = getUniversitiesList(data);\n      var subjectList = getSubjectList(data);\n      var childSubjectList = getChildSubjectList(data);\n      var sortedDateArray = getSortedDateAndNumberArray(data);\n      this.props.setApiData(sortedDateArray);\n      this.props.setProviderListData(providerList);\n      this.setState({\n        apiData: sortedDateArray,\n        providerList: providerList,\n        universitiesList: universitiesList,\n        subjectList: subjectList,\n        childSubjectList: childSubjectList,\n        filteredArray: sortedDateArray,\n        isLoading: false,\n        totalCourseFound: sortedDateArray.length\n      });\n    } //function to get course list for selected option\n    //param: value selected by option, type is a form field selected\n    //return: new course list array\n\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(value, type) {\n      if (value) {\n        if (type === 3) {\n          var filteredArray = this.state.filteredArray;\n          var filteredCourseList = getFilterCourseList(filteredArray, value, type);\n          var childSubjectList = getChildSubjectList(filteredCourseList);\n          this.setState({\n            filteredArray: filteredCourseList,\n            userCoursesFound: filteredCourseList.length,\n            childSubjectList: childSubjectList\n          });\n        } else {\n          var apiData = this.state.apiData;\n\n          var _filteredCourseList = getFilterCourseList(apiData, value, type);\n\n          var _childSubjectList = getChildSubjectList(_filteredCourseList);\n\n          this.setState({\n            filteredArray: _filteredCourseList,\n            userCoursesFound: _filteredCourseList.length,\n            childSubjectList: _childSubjectList\n          });\n        }\n      }\n    } //function to clear filter\n    //return: api feteched arrray\n\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      var apiData = this.state.apiData;\n      var childSubjectList = getChildSubjectList(apiData);\n      this.setState({\n        filteredArray: apiData,\n        userCoursesFound: 0,\n        childSubjectList: childSubjectList\n      });\n    } //function to sort based on next session date and length\n    //param: type of sort selected\n    ///return: new filtered array of course list\n\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(type) {\n      var filteredArray = this.state.filteredArray;\n      var sortedCourseList = getSortedList(filteredArray, type);\n      this.setState({\n        filteredArray: sortedCourseList,\n        userCoursesFound: sortedCourseList.length\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var totalCoursesFound = Constants.totalCoursesFound,\n          courseFoundBasedOnUserSearch = Constants.courseFoundBasedOnUserSearch;\n      var _this$state = this.state,\n          providerList = _this$state.providerList,\n          universitiesList = _this$state.universitiesList,\n          subjectList = _this$state.subjectList,\n          childSubjectList = _this$state.childSubjectList,\n          filteredArray = _this$state.filteredArray,\n          totalCourseFound = _this$state.totalCourseFound,\n          userCoursesFound = _this$state.userCoursesFound;\n\n      if (this.state.isLoading) {\n        return React.createElement(\"div\", {\n          className: \"custom-loading-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Loading.....\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(NavBarComponent, {\n        color: \"dark\",\n        variant: \"dark\",\n        title: \"React Assignment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(SearchComponent, {\n        providerList: providerList,\n        universitiesList: universitiesList,\n        subjectList: subjectList,\n        childSubjectList: childSubjectList,\n        onChangeHandler: this.onChangeHandler,\n        clearFilter: this.clearFilter,\n        onChangeFilter: this.onChangeFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"m-3 ml-0 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"dark\",\n        className: \"mr-3 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, totalCoursesFound, \":\\xA0\", React.createElement(Badge, {\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, totalCourseFound)), React.createElement(Button, {\n        variant: \"dark\",\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, courseFoundBasedOnUserSearch, \":\\xA0\", React.createElement(Badge, {\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, userCoursesFound))), React.createElement(CardComponent, {\n        filteredArray: filteredArray,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    apiData: state.apiData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setApiData: function setApiData(data) {\n      dispatch(_setApiData(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/kuliza-330/github/course-list/src/containers/App/index.js"],"names":["React","Component","SearchComponent","getProviderList","getUniversitiesList","getSubjectList","getSortedDateAndNumberArray","getFilterCourseList","getSortedList","getChildSubjectList","Badge","Button","Row","CardComponent","NavBarComponent","Constants","connect","setApiData","App","props","state","apiData","providerList","universitiesList","subjectList","childSubjectList","isLoading","error","filteredArray","totalCourseFound","userCoursesFound","onChangeHandler","bind","clearFilter","onChangeFilter","endPointApi","getCourseList","url","fetch","then","response","json","data","getSelectOptions","catch","setState","sortedDateArray","setProviderListData","length","value","type","filteredCourseList","sortedCourseList","totalCoursesFound","courseFoundBasedOnUserSearch","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SearchComponent from '../SearchComponent';\nimport {getProviderList,getUniversitiesList,getSubjectList, getSortedDateAndNumberArray, getFilterCourseList, getSortedList, getChildSubjectList} from '../../utils';\nimport {Badge, Button, Row} from 'react-bootstrap';\nimport CardComponent from '../../components/Card';\nimport NavBarComponent from '../../components/NavBar';\nimport Constants from '../../constants';\nimport { connect } from 'react-redux'\nimport {setApiData} from '../../reducer/action';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tapiData: [],\n\t\t\tproviderList: [],\n\t\t\tuniversitiesList: [],\n\t\t\tsubjectList: [],\n\t\t\tchildSubjectList: [],\n\t\t\tisLoading: true,\n            error: null,\n\t\t\tfilteredArray: [],\n\t\t\ttotalCourseFound : 0,\n\t\t\tuserCoursesFound: 0\n\t\t};\n\t\tthis.onChangeHandler = this.onChangeHandler.bind(this);\n\t\tthis.clearFilter = this.clearFilter.bind(this);\n\t\tthis.onChangeFilter = this.onChangeFilter.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {endPointApi} = Constants;\n\t\tthis.getCourseList(endPointApi);\n\t}\n\n\t//function to fetch endpoint api\n\t//param: url\n\t//return: json or error\n\tgetCourseList(url) {\n\t\tfetch(url)\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t\tthis.getSelectOptions(data);\n\t\t})\n\t\t.catch(error => this.setState({ error, isLoading: false }));\n\t}\n\n\t//function to get provider, university, parent subject, child subject and sorted date json list\n\t//param: api data\n\t//retur: provider, university, parent subject, child subject and sorted date json list\n\tgetSelectOptions(data) {\n\t\tconst providerList = getProviderList(data);\n\t\tconst universitiesList = getUniversitiesList(data);\n\t\tconst subjectList = getSubjectList(data);\n\t\tconst childSubjectList = getChildSubjectList(data);\n\t\tconst sortedDateArray = getSortedDateAndNumberArray(data);\n\t\tthis.props.setApiData(sortedDateArray);\n\t\tthis.props.setProviderListData(providerList);\n\t\tthis.setState({\n\t\t\tapiData : sortedDateArray,\n\t\t\tproviderList: providerList,\n\t\t\tuniversitiesList: universitiesList,\n\t\t\tsubjectList: subjectList,\n\t\t\tchildSubjectList: childSubjectList,\n\t\t\tfilteredArray: sortedDateArray,\n\t\t\tisLoading: false,\n\t\t\ttotalCourseFound : sortedDateArray.length,\n\t\t});\n\t}\n\n\t//function to get course list for selected option\n\t//param: value selected by option, type is a form field selected\n\t//return: new course list array\n\tonChangeHandler(value,type) {\n\t\tif(value) {\n\t\t\tif(type === 3) {\n\t\t\t\tconst { filteredArray } =  this.state;\n\t\t\t\tconst filteredCourseList = getFilterCourseList(filteredArray,value,type);\n\t\t\t\tconst childSubjectList = getChildSubjectList(filteredCourseList);\n\t\t\t\tthis.setState({\n\t\t\t\t\tfilteredArray: filteredCourseList,\n\t\t\t\t\tuserCoursesFound: filteredCourseList.length,\n\t\t\t\t\tchildSubjectList: childSubjectList,\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst { apiData } =  this.state;\n\t\t\t\tconst filteredCourseList = getFilterCourseList(apiData,value,type);\n\t\t\t\tconst childSubjectList = getChildSubjectList(filteredCourseList);\n\t\t\t\tthis.setState({\n\t\t\t\t\tfilteredArray: filteredCourseList,\n\t\t\t\t\tuserCoursesFound: filteredCourseList.length,\n\t\t\t\t\tchildSubjectList: childSubjectList,\n\t\t\t\t});\n\t\t\t}\n\t\t}\t\t\n\t}\n\n\t//function to clear filter\n\t//return: api feteched arrray\n\tclearFilter() {\n\t\tconst {apiData} = this.state;\n\t\tconst childSubjectList = getChildSubjectList(apiData);\n\t\tthis.setState({\n\t\t\tfilteredArray: apiData,\n\t\t\tuserCoursesFound: 0,\n\t\t\tchildSubjectList: childSubjectList,\n\t\t});\n\t}\n\t//function to sort based on next session date and length\n\t//param: type of sort selected\n\t///return: new filtered array of course list\n\tonChangeFilter(type) {\n\t\tconst { filteredArray } =  this.state;\n\t\tconst sortedCourseList = getSortedList(filteredArray,type);\n\t\tthis.setState({\n\t\t\tfilteredArray: sortedCourseList,\n\t\t\tuserCoursesFound: sortedCourseList.length,\n\t\t});\n\t}\n\trender() {\n\t\tconst { totalCoursesFound, courseFoundBasedOnUserSearch } = Constants;\n\t\tconst {providerList, universitiesList, subjectList, childSubjectList, filteredArray, totalCourseFound, userCoursesFound} = this.state;\n\t\tif (this.state.isLoading) {\n\t\t\treturn (\n\t\t\t  <div className=\"custom-loading-text\">\n\t\t\t\tLoading.....\n\t\t\t  </div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"p-3\">\n\t\t\t\t<NavBarComponent color=\"dark\" variant=\"dark\" title=\"React Assignment\"/>\n\t\t\t\t<SearchComponent \n\t\t\t\t\tproviderList={providerList} \n\t\t\t\t\tuniversitiesList={universitiesList} \n\t\t\t\t\tsubjectList={subjectList} \n\t\t\t\t\tchildSubjectList = {childSubjectList}\n\t\t\t\t\tonChangeHandler= {this.onChangeHandler}\n\t\t\t\t\tclearFilter = {this.clearFilter}\n\t\t\t\t\tonChangeFilter = {this.onChangeFilter}\n\t\t\t\t/>\n\t\t\t\t<Row className=\"m-3 ml-0 \">\n\t\t\t   \t\t<Button variant=\"dark\"className=\"mr-3 mb-2\">\n\t\t\t\t\t\t{totalCoursesFound}:&nbsp;<Badge variant=\"light\">{totalCourseFound}</Badge>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"dark\" className=\"mb-2\">\n\t\t\t\t\t\t{courseFoundBasedOnUserSearch}:&nbsp;<Badge variant=\"light\">{userCoursesFound}</Badge>\n\t\t\t\t\t</Button>\n\t\t\t   </Row>\n\t\t\t\t<CardComponent filteredArray= {filteredArray}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\tapiData: state.apiData\n\t}\n  }\n  \n  const mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetApiData: data => {\n\t\tdispatch(setApiData(data))\n\t  }\n\t}\n  }\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}